# VDR build system CORE config file
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. 
#
# ----------------------------------------------------------------------------
#
# This file is part of the automatet vdr build and install system that
# is used to build the core components for the zentoo-vdr components
#
# This script is executed from the main VDR build script when a component
# or plugin is to be installed into the VDR build environment.
#
# Functions within the script are:
#
#  - prep(): To configure a plugin before compiling VDR or to patch VDR
#
#  - install(): To install a plugin or feature package or its components
#
#  - config(): To write a VDR config options file for this feature or package
#

PACKAGE_NAME="streamdev"
PACKAGE_VER="CVS"

echo "Conf script for vdr-${PACKAGE_NAME}-$PACKAGE_VER"

# Remember where we came from
OLD_DIR=`pwd`

prep() {
  echo "Starting prep for component: ${0}"
  
  echo "Source package."
  if [ ! -e src-files/vdr-${PACKAGE_NAME}-${PACKAGE_VER}.tar.gz ]; then
    echo FAILED;
    exit 1
  fi
  
  if [ X${VDR_DIR} == X ]; then
    echo "VDR directory variable not set - cannot continue !"
    exit 2
  fi
  
  echo "Extracting into: ${VDR_DIR}/PLUGINS/src"
  tar xzf src-files/vdr-${PACKAGE_NAME}-${PACKAGE_VER}.tar.gz -C ${VDR_DIR}/PLUGINS/src

}

install() {
  echo "Starting install for component: ${0}"

  if [ ! -e ${TARGET_DIR}/usr/local/lib/vdr ]; then           
    mkdir -p ${TARGET_DIR}/usr/local/lib/vdr
  fi                                                            
  /usr/bin/install ${VDR_DIR}/PLUGINS/lib/libvdr-${PACKAGE_NAME}* ${TARGET_DIR}/usr/local/lib/vdr

  if [ ! -e ${TARGET_DIR}/etc/vdr/plugins/streamdev ]; then           
    mkdir -p ${TARGET_DIR}/etc/vdr/plugins/streamdev
  fi                                                            
  /usr/bin/install ${VDR_DIR}/PLUGINS/src/streamdev/streamdev/streamdevhosts.conf ${TARGET_DIR}/etc/vdr/plugins/streamdev
    
  if [ ! -e ${TARGET_DIR}/etc/vdr.d/all ]; then           
    mkdir -p ${TARGET_DIR}/etc/vdr.d/all
  fi                                                            
  
  # lokalization
  cd ${VDR_DIR}
  for lo in locale/??_??; do
    if [ -e ${lo}/LC_MESSAGES/vdr-${PACKAGE_NAME}.mo ]; then           
      if [ ! -e ${TARGET_DIR}/usr/local/share/${lo}/LC_MESSAGES ]; then           
        mkdir -p ${TARGET_DIR}/usr/local/share/${lo}/LC_MESSAGES
     fi                                                            
     cp ${lo}/LC_MESSAGES/vdr-${PACKAGE_NAME}.mo ${TARGET_DIR}/usr/local/share/${lo}/LC_MESSAGES
     rm ${lo}/LC_MESSAGES/vdr-${PACKAGE_NAME}.mo
   fi
  done
    
  cat - > ${TARGET_DIR}/etc/vdr.d/all/plg.${PACKAGE_NAME}-server << EOF
# Streamdev-server configuration script
#
RECORD_SCRIPT=""
STARTUP_SCRIPT=""
PLUGIN_NAME="streamdev-server"
PLUGIN_PARAMETERS=""
SHUTDOWN_SCRIPT=""
PLUGIN_PREFERRED_NUMBER="0030"
CONFIG_FILE_SAVE="plugins/streamdev/streamdevhosts.conf"
EOF

  cat - > ${TARGET_DIR}/etc/vdr.d/all/plg.${PACKAGE_NAME}-client << EOF
# Streamdev configuration script
#
RECORD_SCRIPT=""
STARTUP_SCRIPT=""
PLUGIN_NAME="streamdev-client"
PLUGIN_PARAMETERS=""
SHUTDOWN_SCRIPT=""
PLUGIN_PREFERRED_NUMBER="0030"
EOF

  cd ${OLD_DIR}                                                            
}

config() {
  echo "Starting config for component: ${0}"

#  cd ${TARGET_DIR}/etc/vdr.d
#  ln -sf ./all/plg.${PACKAGE_NAME}  0030-plg.${PACKAGE_NAME}.noload
#  cd ${OLD_DIR}                                                            
}

case "$1" in
  (prep)
    prep
    ;;
  (install)
    install
    ;;
  (config)
    config
    ;;
  *)
    echo $"Usage: $0 {prep|install|config}"
    exit 1
esac
